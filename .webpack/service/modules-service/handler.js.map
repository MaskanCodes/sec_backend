{"version":3,"file":"modules-service/handler.js","mappings":"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","sources":["webpack://sec-backend/./configs/common.js","webpack://sec-backend/./configs/sec-types.js","webpack://sec-backend/./configs/utility.js","webpack://sec-backend/external commonjs \"jsonwebtoken\"","webpack://sec-backend/external node-commonjs \"crypto\"","webpack://sec-backend/external node-commonjs \"fs\"","webpack://sec-backend/external node-commonjs \"https\"","webpack://sec-backend/webpack/bootstrap","webpack://sec-backend/webpack/runtime/compat get default export","webpack://sec-backend/webpack/runtime/define property getters","webpack://sec-backend/webpack/runtime/hasOwnProperty shorthand","webpack://sec-backend/webpack/runtime/make namespace object","webpack://sec-backend/./modules-service/handler.js"],"sourcesContent":["\"strict mode\";\n\nexport const randomNumber = {\n    length: 6,\n    containers: \"7028361495\",\n    minutes: 20,\n};\n\nexport const OTP = {\n    length: 6,\n    containers: \"D01U2JKQZMNO56RST789LAB4CFGE3HIPVWXY\",\n};\n\nexport const thumbnail = {\n    width: 250,\n    height: 250,\n    imgFormat: \"png\",\n};\n\nexport const SMSmessages = {\n    activation_code_message: \"Your Shareecare verification Code is {0}. #ShareECare\",\n};\n\nexport const aws = {\n    s3: {\n        params: {\n            Bucket: \"{0}.shareecare.documents\",\n            Domain: \"{0}.documents.shareecare.com\",\n        },\n    },\n    settings: {\n        root_path: \"user_documents/{0}\", // {0} UserId\n        feedback_path: \"user_feedbacks/{0}\", // {0} UserId\n        image_path: \"/images\",\n        file_path: \"/files\",\n    },\n};\n\nexport const app = {\n    jwtSecret: process.env.JWT_SECRET,\n};\n\nexport const envMapping = {\n    development: \"dev\",\n    production: \"prod\",\n    test: \"test\",\n};\n\nexport const totalFilesSize = 20480;\n","export const result = {\n    SUCCESS: 0, // Success for all response if successful\n\n    /** * 1 to 50 User related error codes ** */\n    EMAIL_EXISTS: 1, // Email already exists\n    MOBILE_EXISTS: 2, // Mobile already exists\n    USER_NOT_EXISTS: 3, // User not exists\n    USER_EXISTS: 4, // User exists\n    USER_PASSWORD_INCORRECT: 5, // Password is wrong\n    REGISTRATION_NOT_CONFIRMED: 6, // user Email is not conformed\n    ACTIVATION_CODE_EXPIRED: 7,\n    ACTIVATION_CODE_MISMATCH: 8,\n    ALREADY_ACTIVE_MEMBER: 9,\n    VALUE_NULL: 10,\n\n    /** Document related service ** */\n    DOCUMENT_N0T_EXISTS: 15,\n\n    /** Firebase push notification service ** */\n    FIREBASE_NOTIFICATION_ERROR: 20,\n\n    /** * 351 t0 400 Google Api related error codes ** */\n    ZERO_RESULTS: 351,\n    OVER_QUERY_LIMIT: 352,\n    REQUEST_DENIED: 353,\n    INVALID_REQUEST: 354,\n    UNKNOWN_ERROR: 355,\n\n    /** * Response Types ** */\n    OK: 200,\n    BAD: 400,\n    DENIED: 401,\n    FORBIDDEN: 403,\n    SERVER_ERROR: 500,\n};\n\nexport const notificationType = {\n    BROADCAST: 1,\n    UNICAST: 2,\n};\n\nexport const userRole = {\n    SUPER_ADMIN: 1,\n    ADMIN: 2,\n    DOCTOR: 3,\n    HCF: 4,\n    PATIENT: 5,\n};\n\nexport const userStatus = {\n    ACTIVE: 0,\n    IN_ACTIVE: 1,\n    DELETED: 2,\n    TRUNK: 3,\n};\n\nexport const isPublished = {\n    PUBLISHED: 0,\n    UNPUBLISHED: 1,\n};\n\nexport const isCompleted = {\n    COMPLETED: 0,\n    NOT_COMPLETED: 1,\n};\n\nexport const mailType = {\n    welcome: 0,\n    resetPassword: 1,\n    error: 999,\n};\n\nexport const notificationStatus = {\n    unRead: 1,\n    read: 2,\n};\n\nexport const isSent = {\n    sent: 0,\n    notSent: 1,\n};\n\nexport const registration_type = {\n    EMAIL: 1,\n    SSO: 2,\n};\n\nexport const registration_from = {\n    WEB: 1,\n    APP: 2,\n};\n\nexport const expirationTime = {\n    normal: {\n        hours: 8,\n        minutes: 2,\n        seconds: 120,\n        unit: \"h\",\n    },\n    remember: {\n        hours: 12,\n        minutes: 12 * 60 * 60,\n        seconds: 60,\n        unit: \"h\",\n    },\n};\n","#!/usr/bin/env node\n/* eslint-disable no-useless-escape */\n\n\"strict mode\";\n\nimport jwt from \"jsonwebtoken\";\nimport https from \"https\";\nimport fs from \"fs\";\n\nimport crypto from \"crypto\";\nimport { expirationTime } from \"./sec-types\";\nimport { randomNumber, OTP, app } from \"./common\";\n\nconst cryptoAlgorithm = \"aes-256-ctr\"; // Do not alter\nconst cryptoPassword = Buffer.from(process.env.CRYPTO_PASSWORD, \"base64\"); // Do not alter\nconst IV_LENGTH = 16;\n\nconst randomStringLength = randomNumber.length;\nconst chars = randomNumber.containers;\n\nconst OTPlength = OTP.length;\nconst OTPchars = OTP.containers;\n\n/**\n * Generates a random number of specified length using the specified characters\n * @returns {string} - The generated random number\n */\nexport const getRandomNumber = () => {\n    let result = \"\";\n    for (let i = randomStringLength; i > 0; --i)\n        result += chars[Math.round(Math.random() * (chars.length - 1))];\n    return result;\n};\n\n/**\n * Generates a one-time password (OTP) of specified length using the specified characters\n * @returns {string} - The generated OTP\n */\nexport const getOTP = () => {\n    let result = \"\";\n    for (let i = OTPlength; i > 0; --i)\n        result += OTPchars[Math.round(Math.random() * (OTPchars.length - 1))];\n    return result;\n};\n\n/**\n * Encrypts a password using AES-256-CTR encryption\n * @param {string} password - The password to be encrypted\n * @returns {string} - The encrypted password, prefixed by the initialization vector used in encryption\n */\nexport const hashString = (password) => {\n    const iv = crypto.randomBytes(IV_LENGTH);\n    const cipher = crypto.createCipheriv(cryptoAlgorithm, Buffer.from(cryptoPassword), iv);\n    const encrypted = cipher.update(password);\n    const finalBuffer = Buffer.concat([encrypted, cipher.final()]);\n    return `${iv.toString(\"hex\")}:${finalBuffer.toString(\"hex\")}`;\n};\n\n/**\n * Decrypts an encrypted password using AES-256-CTR encryption\n * @param {string} password - The encrypted password, prefixed by the initialization vector used in encryption\n * @returns {string} - The decrypted password\n */\nexport const descryptHashString = (password) => {\n    const textParts = password.split(\":\");\n    const iv = Buffer.from(textParts.shift(), \"hex\");\n    const encryptedText = Buffer.from(textParts.join(\":\"), \"hex\");\n    const decipher = crypto.createDecipheriv(cryptoAlgorithm, Buffer.from(cryptoPassword), iv);\n    let decrypted = decipher.update(encryptedText);\n    decrypted = Buffer.concat([decrypted, decipher.final()]);\n    return decrypted.toString();\n};\n\n/**\n * Generates a JSON web token (JWT) for the specified user ID\n * @param {string} user_id - The user ID for which the JWT is to be generated\n * @param {boolean} remember_me - Whether or not to generate a long-lived JWT for \"remember me\" functionality\n * @returns {Promise<string>} - A Promise that resolves to the generated JWT\n */\nexport const generateJWT = async (user_id, remember_me) => {\n    return await jwt.sign({ user_id }, app.jwtSecret, {\n        expiresIn: remember_me\n            ? `${expirationTime.remember.hours}${expirationTime.normal.unit}`\n            : `${expirationTime.normal.hours}${expirationTime.normal.unit}`,\n    });\n};\n\n/**\n * Decodes a JWT and returns the user ID it contains\n * @param {string} token - The JWT to be decoded\n * @returns {Promise<string>} - A Promise that resolves to the user ID contained in the JWT\n */\nexport const decodeJWT = async (token) => {\n    try {\n        const decoded = await jwt.verify(token, app.jwtSecret);\n        return decoded.user_id;\n    } catch (err) {\n        throw err;\n    }\n};\n\n/**\n * Adds the specified number of hours to a given date\n * @param {Date} date - The date to which hours are to be added\n * @param {number} hours - The number of hours to add to the date\n * @returns {Date} - The resulting date\n */\nexport const addHoursToDate = (date, hours) => {\n    return new Date(new Date(date).setHours(date.getHours() + hours));\n};\n\n/**\n * Adds the specified number of minutes to a given date\n * @param {Date} date - The date to which minutes are to be added\n * @param {number} minutes - The number of minutes to add to the date\n * @returns {Date} - The resulting date\n */\nexport const addMinutesToDate = (date, minutes) => {\n    return new Date(new Date(date).setMinutes(date.getMinutes() + minutes));\n};\n\n/**\n * Gets the filename and extension from a given path/filename string\n * @param {string} pathfilename - The path/filename string from which to extract the filename and extension\n * @returns {string[]} - An array containing the filename and extension, respectively\n */\nexport const getFilenameAndExtension = (pathfilename) => {\n    const filenameextension = pathfilename.replace(/^.*[\\\\\\/]/, \"\");\n    const filename = filenameextension.substring(0, filenameextension.lastIndexOf(\".\"));\n    const ext = filenameextension.split(\".\").pop();\n\n    return [filename, ext];\n};\n\n/**\n * Groups an array of objects by the specified key\n * @param {Object[]} arr - The array of objects to be grouped\n * @param {string} key - The key by which to group the objects\n * @returns {Object} - An object containing the groups of objects, with keys corresponding to the grouping key values\n */\nexport const groupBy = (arr, key) => {\n    const initialValue = {};\n    return arr.reduce((acc, cval) => {\n        const myAttribute = cval[key];\n        acc[myAttribute] = [...(acc[myAttribute] || []), cval];\n        return acc;\n    }, initialValue);\n};\n\n/**\n * Creates a success response object for use in AWS Lambda functions\n * @param {Object|string} body - The body of the response object; can be an object or a string\n * @param {number} statusCode - The HTTP status code of the response\n * @returns {Object} - The response object, including headers necessary for CORS and content type\n */\nexport const createSuccessResponse = (body, statusCode) => {\n    const bodyString = typeof body === \"object\" ? JSON.stringify(body) : body;\n    return {\n        statusCode,\n        body: bodyString,\n        headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Content-Type\": \"application/json \",\n        },\n    };\n};\n\n/**\n * Creates an error response object with a given message and status code\n *\n * @param {string} message - The error message\n * @param {number} statusCode - The HTTP status code\n * @returns {Object} - The error response object\n */\nexport const createErrorResponse = (body, statusCode) => {\n    const bodyString = typeof body === \"object\" ? JSON.stringify(body) : body;\n    return {\n        statusCode,\n        body: bodyString || \"Internal Server Error\",\n        headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Content-Type\": \"application/json \",\n        },\n    };\n};\n\n/**\n * Converts a readable stream to a string\n *\n * @param {stream.Readable} stream - The stream to convert\n * @returns {Promise<string>} - A promise that resolves to the stream content as a string\n */\nexport const streamToString = (stream) =>\n    new Promise((resolve, reject) => {\n        const chunks = [];\n        stream.on(\"data\", (chunk) => chunks.push(chunk));\n        stream.on(\"error\", reject);\n        stream.on(\"end\", () => resolve(Buffer.concat(chunks).toString(\"utf8\")));\n    });\n\n/**\n * Parses cookies from a given request object\n *\n * @param {Object} request - The request object\n * @returns {Object} - An object with the parsed cookies\n */\nexport const parseCookies = (request) => {\n    const list = {};\n    try {\n        const cookieHeader =\n            request.queryStringParameters && request.queryStringParameters.cookie\n                ? request.queryStringParameters.cookie.split(\";\")\n                : request.cookies\n                ? request.cookies\n                : request.headers.Cookie\n                ? request.headers.Cookie.split(\";\")\n                : request.headers.cookie\n                ? request.headers.cookie.split(\";\")\n                : request.headers.authorization\n                ? request.headers.authorization.split(\";\")\n                : request.headers.Authorization.split(\";\");\n\n        if (!cookieHeader) return list;\n\n        cookieHeader.forEach((cookie) => {\n            const [name, ...rest] = cookie.split(`=`);\n            const trimedName = name?.trim();\n            if (!trimedName) return;\n            const value = rest.join(`=`).trim();\n            if (!value) return;\n            list[trimedName] = decodeURIComponent(value);\n        });\n    } catch (err) {\n        console.log(\"Some error occured in parsing cookies\", err);\n    }\n\n    return list;\n};\n\n/**\n * Formats a date string to the format 'MM/DD/YYYY'\n *\n * @param {string} date - The date string to format\n * @returns {string} - The formatted date string\n */\nexport const formatDate = (date) => {\n    const newDate = new Date(date);\n    return `${newDate.getMonth() > 8 ? newDate.getMonth() + 1 : `0${newDate.getMonth() + 1}`}/${\n        newDate.getDate() > 9 ? newDate.getDate() : `0${newDate.getDate()}`\n    }/${newDate.getFullYear()}`;\n};\n\n/**\n * Creates a directory at the given path\n *\n * @param {string} path - The path of the directory to create\n * @returns {Promise<void>} - A promise that resolves when the directory is created\n */\nexport const createDirectory = async (path) => {\n    try {\n        if (!fs.existsSync(path)) {\n            fs.mkdirSync(path);\n        }\n    } catch (err) {\n        console.log(\"Error occured in creating directory\", err);\n    }\n};\n\n/**\n * Downloads a file from the given URL and saves it to the given file path\n *\n * @param {string} url - The URL of the file to download\n * @param {string} filePath - The path of the file to save to\n * @returns {Promise<void>} - A promise that resolves when the file is downloaded\n */\nexport const downloadFile = async (url, filePath) => {\n    return await new Promise((resolve, reject) => {\n        console.log(\"Downloading file from \", url, \"to\", filePath);\n        https\n            .get(url, (response) => {\n                const code = response.statusCode ? response.statusCode : 0;\n\n                if (code >= 400) {\n                    return reject(new Error(response.statusMessage));\n                }\n\n                // handle redirects\n                if (code > 300 && code < 400 && !!response.headers.location) {\n                    return downloadFile(response.headers.location, filePath);\n                }\n\n                // save the file to disk\n                const fileWriter = fs.createWriteStream(filePath).on(\"finish\", () => {\n                    console.log(\"Download Completed!\");\n                    resolve({});\n                });\n\n                response.pipe(fileWriter);\n                return \"File written\";\n            })\n            .on(\"error\", (error) => {\n                console.log(\"Error occured in downloading file\", error);\n                reject(error);\n            });\n    });\n};\n\n/**\n * Returns the top-level domain of a given URL without any subdomains.\n * @param {string} domain - The full domain to extract the top-level domain from.\n * @returns {string} - The top-level domain of the given domain without any subdomains.\n * @throws {Error} - Throws an error if the domain cannot be processed.\n */\nexport const getDomainWithoutSubdomain = (domain) => {\n    try {\n        const domainCharacters = domain.split(\"\").reverse();\n        let domainReversed = \"\";\n        let dotCount = 0;\n\n        do {\n            if (domainCharacters[0] === \".\") {\n                dotCount++;\n                if (dotCount === 2) break;\n            }\n            domainReversed += domainCharacters[0];\n            domainCharacters.splice(0, 1);\n        } while (dotCount < 2 && domainCharacters.length > 0);\n\n        return domainReversed.split(\"\").reverse().join(\"\");\n    } catch (err) {\n        console.log(\"Error occured while getting domain without sub domain\", err);\n        throw err;\n    }\n};\n\n/**\n * Returns the size of a file in bytes given the file's path.\n * @param {string} filename - The path to the file to get the size of.\n * @returns {number} - The size of the file in bytes.\n */\nexport const getFilesizeInBytes = (filename) => {\n    const stats = fs.statSync(filename);\n    return stats.size;\n};\n\n/**\n * Returns the start and end dates of a specified period based on a given date.\n * @param {string} periodType - The type of period to get (\"day\", \"month\", \"months\", or \"year\").\n * @param {string[]} date - The date to calculate the period start and end from.\n * @param {number} value - The number of months to subtract when the periodType is \"months\".\n * @returns {Date[]} - An array containing the start and end dates of the specified period.\n * @throws {Error} - Throws an error if the periodType is not one of the specified types.\n */\nexport const getPeriodStartEnd = (periodType, date, value) => {\n    if (periodType === \"date_range\") return [new Date(date[0]), new Date(date[1])];\n\n    const startDate = new Date(date[0]);\n    const endDate = new Date(date[0]);\n\n    if (periodType === \"day\") {\n        startDate.setHours(0, 0, 0, 0);\n        endDate.setHours(23, 59, 59, 999);\n    } else if (periodType === \"month\") {\n        startDate.setDate(1);\n        endDate.setMonth(endDate.getMonth() + 1);\n        endDate.setDate(0);\n        endDate.setHours(23, 59, 59, 999);\n    } else if (periodType === \"months\") {\n        startDate.setMonth(startDate.getMonth() - value);\n        startDate.setDate(0);\n        endDate.setMonth(endDate.getMonth() + 1);\n        endDate.setDate(0);\n        endDate.setHours(23, 59, 59, 999);\n    } else if (periodType === \"year\") {\n        startDate.setFullYear(startDate.getFullYear() - 1);\n        startDate.setMonth(startDate.getMonth());\n        endDate.setMonth(startDate.getMonth());\n        endDate.setHours(23, 59, 59, 999);\n    } else {\n        throw new Error(stringifyError({ message: \"Invalid period type\", code: 400 }));\n    }\n\n    return [startDate, endDate];\n};\n\nexport const parseEventBody = (parseBody) => {\n    if (parseBody) {\n        return JSON.parse(parseBody);\n    }\n    return parseBody;\n};\n\nexport const stringifyError = (errObj) => {\n    try {\n        return JSON.stringify(errObj);\n    } catch (err) {\n        return errObj;\n    }\n};\n\nexport const parseError = (errObj) => {\n    try {\n        return JSON.parse(errObj);\n    } catch (err) {\n        return errObj;\n    }\n};\n\nexport const generateError = (message, code) => {\n    throw new Error(stringifyError({ message, code }));\n};\n","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"crypto\");","module.exports = require(\"fs\");","module.exports = require(\"https\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { createSuccessResponse, createErrorResponse } from \"../configs/utility\";\n\nexport const test = async (event, context, callback) => {\n    const user = event.requestContext.authorizer;\n    console.log(user);\n    try {\n        const response = {\n            statusCode: 200,\n            body: JSON.stringify({\n                message: \"Modules service function executed successfully!\",\n                input: event,\n            }),\n        };\n        return createSuccessResponse({ response }, 200);\n    } catch (err) {\n        console.log(\"Error in handler\", err, err.statusCode);\n        return createErrorResponse({ error: err.message }, 500);\n    }\n};\n"],"names":["randomNumber","length","containers","minutes","OTP","thumbnail","width","height","imgFormat","SMSmessages","activation_code_message","aws","s3","params","Bucket","Domain","settings","root_path","feedback_path","image_path","file_path","app","jwtSecret","process","env","JWT_SECRET","envMapping","development","production","test","totalFilesSize","result","SUCCESS","EMAIL_EXISTS","MOBILE_EXISTS","USER_NOT_EXISTS","USER_EXISTS","USER_PASSWORD_INCORRECT","REGISTRATION_NOT_CONFIRMED","ACTIVATION_CODE_EXPIRED","ACTIVATION_CODE_MISMATCH","ALREADY_ACTIVE_MEMBER","VALUE_NULL","DOCUMENT_N0T_EXISTS","FIREBASE_NOTIFICATION_ERROR","ZERO_RESULTS","OVER_QUERY_LIMIT","REQUEST_DENIED","INVALID_REQUEST","UNKNOWN_ERROR","OK","BAD","DENIED","FORBIDDEN","SERVER_ERROR","notificationType","BROADCAST","UNICAST","userRole","SUPER_ADMIN","ADMIN","DOCTOR","HCF","PATIENT","userStatus","ACTIVE","IN_ACTIVE","DELETED","TRUNK","isPublished","PUBLISHED","UNPUBLISHED","isCompleted","COMPLETED","NOT_COMPLETED","mailType","welcome","resetPassword","error","notificationStatus","unRead","read","isSent","sent","notSent","registration_type","EMAIL","SSO","registration_from","WEB","APP","expirationTime","normal","hours","seconds","unit","remember","jwt","https","fs","crypto","cryptoAlgorithm","cryptoPassword","Buffer","from","CRYPTO_PASSWORD","IV_LENGTH","randomStringLength","chars","OTPlength","OTPchars","getRandomNumber","i","Math","round","random","getOTP","hashString","password","iv","randomBytes","cipher","createCipheriv","encrypted","update","finalBuffer","concat","final","toString","descryptHashString","textParts","split","shift","encryptedText","join","decipher","createDecipheriv","decrypted","generateJWT","user_id","remember_me","sign","expiresIn","decodeJWT","token","decoded","verify","err","addHoursToDate","date","Date","setHours","getHours","addMinutesToDate","setMinutes","getMinutes","getFilenameAndExtension","pathfilename","filenameextension","replace","filename","substring","lastIndexOf","ext","pop","groupBy","arr","key","initialValue","reduce","acc","cval","myAttribute","createSuccessResponse","body","statusCode","bodyString","JSON","stringify","headers","createErrorResponse","streamToString","stream","Promise","resolve","reject","chunks","on","chunk","push","parseCookies","request","list","cookieHeader","queryStringParameters","cookie","cookies","Cookie","authorization","Authorization","forEach","name","rest","trimedName","trim","value","decodeURIComponent","console","log","formatDate","newDate","getMonth","getDate","getFullYear","createDirectory","path","existsSync","mkdirSync","downloadFile","url","filePath","get","response","code","Error","statusMessage","location","fileWriter","createWriteStream","pipe","getDomainWithoutSubdomain","domain","domainCharacters","reverse","domainReversed","dotCount","splice","getFilesizeInBytes","stats","statSync","size","getPeriodStartEnd","periodType","startDate","endDate","setDate","setMonth","setFullYear","stringifyError","message","parseEventBody","parseBody","parse","errObj","parseError","generateError","event","context","callback","user","requestContext","authorizer","input"],"sourceRoot":""}