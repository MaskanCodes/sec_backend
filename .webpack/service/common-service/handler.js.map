{"version":3,"file":"common-service/handler.js","mappings":"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","sources":["webpack://sec-backend/./common-service/helpers.js","webpack://sec-backend/./configs/common.js","webpack://sec-backend/./configs/sec-types.js","webpack://sec-backend/./configs/utility.js","webpack://sec-backend/./database/helper.js","webpack://sec-backend/./database/index.js","webpack://sec-backend/./database/tables.js","webpack://sec-backend/external commonjs \"jsonwebtoken\"","webpack://sec-backend/external commonjs \"serverless-mysql\"","webpack://sec-backend/external node-commonjs \"crypto\"","webpack://sec-backend/external node-commonjs \"fs\"","webpack://sec-backend/external node-commonjs \"https\"","webpack://sec-backend/webpack/bootstrap","webpack://sec-backend/webpack/runtime/compat get default export","webpack://sec-backend/webpack/runtime/define property getters","webpack://sec-backend/webpack/runtime/hasOwnProperty shorthand","webpack://sec-backend/webpack/runtime/make namespace object","webpack://sec-backend/./common-service/handler.js"],"sourcesContent":["// Tell JSHint to ignore this warning: 'character may get silently deleted by one or more browsers'\n// jshint -W100\n\n// Array of country objects for the flag dropdown.\n// Each contains a name, country code (ISO 3166-1 alpha-2) and dial code.\n\n// Originally from https://github.com/mledoze/countries\n// then with a couple of manual re-arrangements to be alphabetical\n// then changed Kazakhstan from +76 to +7\n// and Vatican City from +379 to +39 (see issue 50)\n// and Caribean Netherlands from +5997 to +599\n// and Curacao from +5999 to +599\n// Removed:  Kosovo, Pitcairn Islands, South Georgia\n\n// UPDATE Sept 12th 2015\n// List of regions that have iso2 country codes, which I have chosen to omit:\n// (based on this information: https://en.wikipedia.org/wiki/List_of_country_calling_codes)\n// AQ - Antarctica - all different country codes depending on which 'base'\n// BV - Bouvet Island - no calling code\n// GS - South Georgia and the South Sandwich Islands -\n// 'inhospitable collection of islands' - same flag and calling code as Falkland Islands\n// HM - Heard Island and McDonald Islands - no calling code\n// PN - Pitcairn - tiny population (56), same calling code as New Zealand\n// TF - French Southern Territories - no calling code\n// UM - United States Minor Outlying Islands - no calling code\n\n// UPDATE the criteria of supported countries or territories (see issue 297)\n// Have an iso2 code: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\n// Have a country calling code: https://en.wikipedia.org/wiki/List_of_country_calling_codes\n// Have a flag\n// Must be supported by libphonenumber: https://github.com/googlei18n/libphonenumber\n\n// Update: converted objects to arrays to save bytes!\n// Update: added 'priority' for countries with the same dialCode as others\n// Update: added array of area codes for countries with the same dialCode as others\n\n// So each country array has the following information:\n// [\n//    Country name,\n//    iso2 code,\n//    International dial code,\n//    Order (if >1 country with same dial code),\n//    Area codes (if >1 country with same dial code)\n// ]\nconst defaultCountriesData = [\n    [\"Afghanistan (‫افغانستان‬‎)\", \"af\", \"93\"],\n    [\"Albania (Shqipëri)\", \"al\", \"355\"],\n    [\"Algeria (‫الجزائر‬‎)\", \"dz\", \"213\"],\n    [\"American Samoa\", \"as\", \"1684\"],\n    [\"Andorra\", \"ad\", \"376\"],\n    [\"Angola\", \"ao\", \"244\"],\n    [\"Anguilla\", \"ai\", \"1264\"],\n    [\"Antigua and Barbuda\", \"ag\", \"1268\"],\n    [\"Argentina\", \"ar\", \"54\"],\n    [\"Armenia (Հայաստան)\", \"am\", \"374\"],\n    [\"Aruba\", \"aw\", \"297\"],\n    [\"Australia\", \"au\", \"61\", 0],\n    [\"Austria (Österreich)\", \"at\", \"43\"],\n    [\"Azerbaijan (Azərbaycan)\", \"az\", \"994\"],\n    [\"Bahamas\", \"bs\", \"1242\"],\n    [\"Bahrain (‫البحرين‬‎)\", \"bh\", \"973\"],\n    [\"Bangladesh (বাংলাদেশ)\", \"bd\", \"880\"],\n    [\"Barbados\", \"bb\", \"1246\"],\n    [\"Belarus (Беларусь)\", \"by\", \"375\"],\n    [\"Belgium (België)\", \"be\", \"32\"],\n    [\"Belize\", \"bz\", \"501\"],\n    [\"Benin (Bénin)\", \"bj\", \"229\"],\n    [\"Bermuda\", \"bm\", \"1441\"],\n    [\"Bhutan (འབྲུག)\", \"bt\", \"975\"],\n    [\"Bolivia\", \"bo\", \"591\"],\n    [\"Bosnia and Herzegovina (Босна и Херцеговина)\", \"ba\", \"387\"],\n    [\"Botswana\", \"bw\", \"267\"],\n    [\"Brazil (Brasil)\", \"br\", \"55\"],\n    [\"British Indian Ocean Territory\", \"io\", \"246\"],\n    [\"British Virgin Islands\", \"vg\", \"1284\"],\n    [\"Brunei\", \"bn\", \"673\"],\n    [\"Bulgaria (България)\", \"bg\", \"359\"],\n    [\"Burkina Faso\", \"bf\", \"226\"],\n    [\"Burundi (Uburundi)\", \"bi\", \"257\"],\n    [\"Cambodia (កម្ពុជា)\", \"kh\", \"855\"],\n    [\"Cameroon (Cameroun)\", \"cm\", \"237\"],\n    [\n        \"Canada\",\n        \"ca\",\n        \"1\",\n        1,\n        [\n            \"204\",\n            \"226\",\n            \"236\",\n            \"249\",\n            \"250\",\n            \"289\",\n            \"306\",\n            \"343\",\n            \"365\",\n            \"367\",\n            \"387\",\n            \"403\",\n            \"416\",\n            \"418\",\n            \"431\",\n            \"437\",\n            \"438\",\n            \"450\",\n            \"506\",\n            \"514\",\n            \"519\",\n            \"548\",\n            \"579\",\n            \"581\",\n            \"587\",\n            \"604\",\n            \"613\",\n            \"639\",\n            \"647\",\n            \"672\",\n            \"705\",\n            \"709\",\n            \"742\",\n            \"778\",\n            \"780\",\n            \"782\",\n            \"807\",\n            \"819\",\n            \"825\",\n            \"867\",\n            \"873\",\n            \"902\",\n            \"905\",\n        ],\n    ],\n    [\"Cape Verde (Kabu Verdi)\", \"cv\", \"238\"],\n    [\"Caribbean Netherlands\", \"bq\", \"599\", 1],\n    [\"Cayman Islands\", \"ky\", \"1345\"],\n    [\"Central African Republic (République centrafricaine)\", \"cf\", \"236\"],\n    [\"Chad (Tchad)\", \"td\", \"235\"],\n    [\"Chile\", \"cl\", \"56\"],\n    [\"China (中国)\", \"cn\", \"86\"],\n    [\"Christmas Island\", \"cx\", \"61\", 2],\n    [\"Cocos (Keeling) Islands\", \"cc\", \"61\", 1],\n    [\"Colombia\", \"co\", \"57\"],\n    [\"Comoros (‫جزر القمر‬‎)\", \"km\", \"269\"],\n    [\"Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)\", \"cd\", \"243\"],\n    [\"Congo (Republic) (Congo-Brazzaville)\", \"cg\", \"242\"],\n    [\"Cook Islands\", \"ck\", \"682\"],\n    [\"Costa Rica\", \"cr\", \"506\"],\n    [\"Côte d’Ivoire\", \"ci\", \"225\"],\n    [\"Croatia (Hrvatska)\", \"hr\", \"385\"],\n    [\"Cuba\", \"cu\", \"53\"],\n    [\"Curaçao\", \"cw\", \"599\", 0],\n    [\"Cyprus (Κύπρος)\", \"cy\", \"357\"],\n    [\"Czech Republic (Česká republika)\", \"cz\", \"420\"],\n    [\"Denmark (Danmark)\", \"dk\", \"45\"],\n    [\"Djibouti\", \"dj\", \"253\"],\n    [\"Dominica\", \"dm\", \"1767\"],\n    [\"Dominican Republic (República Dominicana)\", \"do\", \"1\", 2, [\"809\", \"829\", \"849\"]],\n    [\"Ecuador\", \"ec\", \"593\"],\n    [\"Egypt (‫مصر‬‎)\", \"eg\", \"20\"],\n    [\"El Salvador\", \"sv\", \"503\"],\n    [\"Equatorial Guinea (Guinea Ecuatorial)\", \"gq\", \"240\"],\n    [\"Eritrea\", \"er\", \"291\"],\n    [\"Estonia (Eesti)\", \"ee\", \"372\"],\n    [\"Ethiopia\", \"et\", \"251\"],\n    [\"Falkland Islands (Islas Malvinas)\", \"fk\", \"500\"],\n    [\"Faroe Islands (Føroyar)\", \"fo\", \"298\"],\n    [\"Fiji\", \"fj\", \"679\"],\n    [\"Finland (Suomi)\", \"fi\", \"358\", 0],\n    [\"France\", \"fr\", \"33\"],\n    [\"French Guiana (Guyane française)\", \"gf\", \"594\"],\n    [\"French Polynesia (Polynésie française)\", \"pf\", \"689\"],\n    [\"Gabon\", \"ga\", \"241\"],\n    [\"Gambia\", \"gm\", \"220\"],\n    [\"Georgia (საქართველო)\", \"ge\", \"995\"],\n    [\"Germany (Deutschland)\", \"de\", \"49\"],\n    [\"Ghana (Gaana)\", \"gh\", \"233\"],\n    [\"Gibraltar\", \"gi\", \"350\"],\n    [\"Greece (Ελλάδα)\", \"gr\", \"30\"],\n    [\"Greenland (Kalaallit Nunaat)\", \"gl\", \"299\"],\n    [\"Grenada\", \"gd\", \"1473\"],\n    [\"Guadeloupe\", \"gp\", \"590\", 0],\n    [\"Guam\", \"gu\", \"1671\"],\n    [\"Guatemala\", \"gt\", \"502\"],\n    [\"Guernsey\", \"gg\", \"44\", 1],\n    [\"Guinea (Guinée)\", \"gn\", \"224\"],\n    [\"Guinea-Bissau (Guiné Bissau)\", \"gw\", \"245\"],\n    [\"Guyana\", \"gy\", \"592\"],\n    [\"Haiti\", \"ht\", \"509\"],\n    [\"Honduras\", \"hn\", \"504\"],\n    [\"Hong Kong (香港)\", \"hk\", \"852\"],\n    [\"Hungary (Magyarország)\", \"hu\", \"36\"],\n    [\"Iceland (Ísland)\", \"is\", \"354\"],\n    [\"India (भारत)\", \"in\", \"91\"],\n    [\"Indonesia\", \"id\", \"62\"],\n    [\"Iran (‫ایران‬‎)\", \"ir\", \"98\"],\n    [\"Iraq (‫العراق‬‎)\", \"iq\", \"964\"],\n    [\"Ireland\", \"ie\", \"353\"],\n    [\"Isle of Man\", \"im\", \"44\", 2],\n    [\"Israel (‫ישראל‬‎)\", \"il\", \"972\"],\n    [\"Italy (Italia)\", \"it\", \"39\", 0],\n    [\"Jamaica\", \"jm\", \"1876\"],\n    [\"Japan (日本)\", \"jp\", \"81\"],\n    [\"Jersey\", \"je\", \"44\", 3],\n    [\"Jordan (‫الأردن‬‎)\", \"jo\", \"962\"],\n    [\"Kazakhstan (Казахстан)\", \"kz\", \"7\", 1],\n    [\"Kenya\", \"ke\", \"254\"],\n    [\"Kiribati\", \"ki\", \"686\"],\n    [\"Kosovo\", \"xk\", \"383\"],\n    [\"Kuwait (‫الكويت‬‎)\", \"kw\", \"965\"],\n    [\"Kyrgyzstan (Кыргызстан)\", \"kg\", \"996\"],\n    [\"Laos (ລາວ)\", \"la\", \"856\"],\n    [\"Latvia (Latvija)\", \"lv\", \"371\"],\n    [\"Lebanon (‫لبنان‬‎)\", \"lb\", \"961\"],\n    [\"Lesotho\", \"ls\", \"266\"],\n    [\"Liberia\", \"lr\", \"231\"],\n    [\"Libya (‫ليبيا‬‎)\", \"ly\", \"218\"],\n    [\"Liechtenstein\", \"li\", \"423\"],\n    [\"Lithuania (Lietuva)\", \"lt\", \"370\"],\n    [\"Luxembourg\", \"lu\", \"352\"],\n    [\"Macau (澳門)\", \"mo\", \"853\"],\n    [\"Macedonia (FYROM) (Македонија)\", \"mk\", \"389\"],\n    [\"Madagascar (Madagasikara)\", \"mg\", \"261\"],\n    [\"Malawi\", \"mw\", \"265\"],\n    [\"Malaysia\", \"my\", \"60\"],\n    [\"Maldives\", \"mv\", \"960\"],\n    [\"Mali\", \"ml\", \"223\"],\n    [\"Malta\", \"mt\", \"356\"],\n    [\"Marshall Islands\", \"mh\", \"692\"],\n    [\"Martinique\", \"mq\", \"596\"],\n    [\"Mauritania (‫موريتانيا‬‎)\", \"mr\", \"222\"],\n    [\"Mauritius (Moris)\", \"mu\", \"230\"],\n    [\"Mayotte\", \"yt\", \"262\", 1],\n    [\"Mexico (México)\", \"mx\", \"52\"],\n    [\"Micronesia\", \"fm\", \"691\"],\n    [\"Moldova (Republica Moldova)\", \"md\", \"373\"],\n    [\"Monaco\", \"mc\", \"377\"],\n    [\"Mongolia (Монгол)\", \"mn\", \"976\"],\n    [\"Montenegro (Crna Gora)\", \"me\", \"382\"],\n    [\"Montserrat\", \"ms\", \"1664\"],\n    [\"Morocco (‫المغرب‬‎)\", \"ma\", \"212\", 0],\n    [\"Mozambique (Moçambique)\", \"mz\", \"258\"],\n    [\"Myanmar (Burma) (မြန်မာ)\", \"mm\", \"95\"],\n    [\"Namibia (Namibië)\", \"na\", \"264\"],\n    [\"Nauru\", \"nr\", \"674\"],\n    [\"Nepal (नेपाल)\", \"np\", \"977\"],\n    [\"Netherlands (Nederland)\", \"nl\", \"31\"],\n    [\"New Caledonia (Nouvelle-Calédonie)\", \"nc\", \"687\"],\n    [\"New Zealand\", \"nz\", \"64\"],\n    [\"Nicaragua\", \"ni\", \"505\"],\n    [\"Niger (Nijar)\", \"ne\", \"227\"],\n    [\"Nigeria\", \"ng\", \"234\"],\n    [\"Niue\", \"nu\", \"683\"],\n    [\"Norfolk Island\", \"nf\", \"672\"],\n    [\"North Korea (조선 민주주의 인민 공화국)\", \"kp\", \"850\"],\n    [\"Northern Mariana Islands\", \"mp\", \"1670\"],\n    [\"Norway (Norge)\", \"no\", \"47\", 0],\n    [\"Oman (‫عُمان‬‎)\", \"om\", \"968\"],\n    [\"Pakistan (‫پاکستان‬‎)\", \"pk\", \"92\"],\n    [\"Palau\", \"pw\", \"680\"],\n    [\"Palestine (‫فلسطين‬‎)\", \"ps\", \"970\"],\n    [\"Panama (Panamá)\", \"pa\", \"507\"],\n    [\"Papua New Guinea\", \"pg\", \"675\"],\n    [\"Paraguay\", \"py\", \"595\"],\n    [\"Peru (Perú)\", \"pe\", \"51\"],\n    [\"Philippines\", \"ph\", \"63\"],\n    [\"Poland (Polska)\", \"pl\", \"48\"],\n    [\"Portugal\", \"pt\", \"351\"],\n    [\"Puerto Rico\", \"pr\", \"1\", 3, [\"787\", \"939\"]],\n    [\"Qatar (‫قطر‬‎)\", \"qa\", \"974\"],\n    [\"Réunion (La Réunion)\", \"re\", \"262\", 0],\n    [\"Romania (România)\", \"ro\", \"40\"],\n    [\"Russia (Россия)\", \"ru\", \"7\", 0],\n    [\"Rwanda\", \"rw\", \"250\"],\n    [\"Saint Barthélemy (Saint-Barthélemy)\", \"bl\", \"590\", 1],\n    [\"Saint Helena\", \"sh\", \"290\"],\n    [\"Saint Kitts and Nevis\", \"kn\", \"1869\"],\n    [\"Saint Lucia\", \"lc\", \"1758\"],\n    [\"Saint Martin (Saint-Martin (partie française))\", \"mf\", \"590\", 2],\n    [\"Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)\", \"pm\", \"508\"],\n    [\"Saint Vincent and the Grenadines\", \"vc\", \"1784\"],\n    [\"Samoa\", \"ws\", \"685\"],\n    [\"San Marino\", \"sm\", \"378\"],\n    [\"São Tomé and Príncipe (São Tomé e Príncipe)\", \"st\", \"239\"],\n    [\"Saudi Arabia (‫المملكة العربية السعودية‬‎)\", \"sa\", \"966\"],\n    [\"Senegal (Sénégal)\", \"sn\", \"221\"],\n    [\"Serbia (Србија)\", \"rs\", \"381\"],\n    [\"Seychelles\", \"sc\", \"248\"],\n    [\"Sierra Leone\", \"sl\", \"232\"],\n    [\"Singapore\", \"sg\", \"65\"],\n    [\"Sint Maarten\", \"sx\", \"1721\"],\n    [\"Slovakia (Slovensko)\", \"sk\", \"421\"],\n    [\"Slovenia (Slovenija)\", \"si\", \"386\"],\n    [\"Solomon Islands\", \"sb\", \"677\"],\n    [\"Somalia (Soomaaliya)\", \"so\", \"252\"],\n    [\"South Africa\", \"za\", \"27\"],\n    [\"South Korea (대한민국)\", \"kr\", \"82\"],\n    [\"South Sudan (‫جنوب السودان‬‎)\", \"ss\", \"211\"],\n    [\"Spain (España)\", \"es\", \"34\"],\n    [\"Sri Lanka (ශ්‍රී ලංකාව)\", \"lk\", \"94\"],\n    [\"Sudan (‫السودان‬‎)\", \"sd\", \"249\"],\n    [\"Suriname\", \"sr\", \"597\"],\n    [\"Svalbard and Jan Mayen\", \"sj\", \"47\", 1],\n    [\"Swaziland\", \"sz\", \"268\"],\n    [\"Sweden (Sverige)\", \"se\", \"46\"],\n    [\"Switzerland (Schweiz)\", \"ch\", \"41\"],\n    [\"Syria (‫سوريا‬‎)\", \"sy\", \"963\"],\n    [\"Taiwan (台灣)\", \"tw\", \"886\"],\n    [\"Tajikistan\", \"tj\", \"992\"],\n    [\"Tanzania\", \"tz\", \"255\"],\n    [\"Thailand (ไทย)\", \"th\", \"66\"],\n    [\"Timor-Leste\", \"tl\", \"670\"],\n    [\"Togo\", \"tg\", \"228\"],\n    [\"Tokelau\", \"tk\", \"690\"],\n    [\"Tonga\", \"to\", \"676\"],\n    [\"Trinidad and Tobago\", \"tt\", \"1868\"],\n    [\"Tunisia (‫تونس‬‎)\", \"tn\", \"216\"],\n    [\"Turkey (Türkiye)\", \"tr\", \"90\"],\n    [\"Turkmenistan\", \"tm\", \"993\"],\n    [\"Turks and Caicos Islands\", \"tc\", \"1649\"],\n    [\"Tuvalu\", \"tv\", \"688\"],\n    [\"U.S. Virgin Islands\", \"vi\", \"1340\"],\n    [\"Uganda\", \"ug\", \"256\"],\n    [\"Ukraine (Україна)\", \"ua\", \"380\"],\n    [\"United Arab Emirates (‫الإمارات العربية المتحدة‬‎)\", \"ae\", \"971\"],\n    [\"United Kingdom\", \"gb\", \"44\", 0],\n    [\"United States\", \"us\", \"1\", 0],\n    [\"Uruguay\", \"uy\", \"598\"],\n    [\"Uzbekistan (Oʻzbekiston)\", \"uz\", \"998\"],\n    [\"Vanuatu\", \"vu\", \"678\"],\n    [\"Vatican City (Città del Vaticano)\", \"va\", \"39\", 1],\n    [\"Venezuela\", \"ve\", \"58\"],\n    [\"Vietnam (Việt Nam)\", \"vn\", \"84\"],\n    [\"Wallis and Futuna\", \"wf\", \"681\"],\n    [\"Western Sahara (‫الصحراء الغربية‬‎)\", \"eh\", \"212\", 1],\n    [\"Yemen (‫اليمن‬‎)\", \"ye\", \"967\"],\n    [\"Zambia\", \"zm\", \"260\"],\n    [\"Zimbabwe\", \"zw\", \"263\"],\n    [\"Åland Islands\", \"ax\", \"358\", 1],\n];\n\nconst _formatCountriesData = (countriesData) => {\n    const countryCodeList = {};\n    countriesData.forEach((country) => {\n        countryCodeList[country[1]] = {\n            name: country[0],\n            iso2: country[1],\n            dialCode: country[2],\n            priority: country[3] || 0,\n            areaCodes: country[4] || null,\n        };\n    });\n    return countryCodeList;\n};\n\nexport const getCountryCodesList = () => {\n    return _formatCountriesData(defaultCountriesData);\n};\n","\"strict mode\";\n\nexport const randomNumber = {\n    length: 6,\n    containers: \"7028361495\",\n    minutes: 20,\n};\n\nexport const OTP = {\n    length: 6,\n    containers: \"D01U2JKQZMNO56RST789LAB4CFGE3HIPVWXY\",\n};\n\nexport const thumbnail = {\n    width: 250,\n    height: 250,\n    imgFormat: \"png\",\n};\n\nexport const SMSmessages = {\n    activation_code_message: \"Your Shareecare verification Code is {0}. #ShareECare\",\n};\n\nexport const aws = {\n    s3: {\n        params: {\n            Bucket: \"{0}.shareecare.documents\",\n            Domain: \"{0}.documents.shareecare.com\",\n        },\n    },\n    settings: {\n        root_path: \"user_documents/{0}\", // {0} UserId\n        feedback_path: \"user_feedbacks/{0}\", // {0} UserId\n        image_path: \"/images\",\n        file_path: \"/files\",\n    },\n};\n\nexport const app = {\n    jwtSecret: process.env.JWT_SECRET,\n};\n\nexport const envMapping = {\n    development: \"dev\",\n    production: \"prod\",\n    test: \"test\",\n};\n\nexport const totalFilesSize = 20480;\n","export const result = {\n    SUCCESS: 0, // Success for all response if successful\n\n    /** * 1 to 50 User related error codes ** */\n    EMAIL_EXISTS: 1, // Email already exists\n    MOBILE_EXISTS: 2, // Mobile already exists\n    USER_NOT_EXISTS: 3, // User not exists\n    USER_EXISTS: 4, // User exists\n    USER_PASSWORD_INCORRECT: 5, // Password is wrong\n    REGISTRATION_NOT_CONFIRMED: 6, // user Email is not conformed\n    ACTIVATION_CODE_EXPIRED: 7,\n    ACTIVATION_CODE_MISMATCH: 8,\n    ALREADY_ACTIVE_MEMBER: 9,\n    VALUE_NULL: 10,\n\n    /** Document related service ** */\n    DOCUMENT_N0T_EXISTS: 15,\n\n    /** Firebase push notification service ** */\n    FIREBASE_NOTIFICATION_ERROR: 20,\n\n    /** * 351 t0 400 Google Api related error codes ** */\n    ZERO_RESULTS: 351,\n    OVER_QUERY_LIMIT: 352,\n    REQUEST_DENIED: 353,\n    INVALID_REQUEST: 354,\n    UNKNOWN_ERROR: 355,\n\n    /** * Response Types ** */\n    OK: 200,\n    BAD: 400,\n    DENIED: 401,\n    FORBIDDEN: 403,\n    SERVER_ERROR: 500,\n};\n\nexport const notificationType = {\n    BROADCAST: 1,\n    UNICAST: 2,\n};\n\nexport const userRole = {\n    SUPER_ADMIN: 1,\n    ADMIN: 2,\n    DOCTOR: 3,\n    HCF: 4,\n    PATIENT: 5,\n};\n\nexport const userStatus = {\n    ACTIVE: 0,\n    IN_ACTIVE: 1,\n    DELETED: 2,\n    TRUNK: 3,\n};\n\nexport const isPublished = {\n    PUBLISHED: 0,\n    UNPUBLISHED: 1,\n};\n\nexport const isCompleted = {\n    COMPLETED: 0,\n    NOT_COMPLETED: 1,\n};\n\nexport const mailType = {\n    welcome: 0,\n    resetPassword: 1,\n    error: 999,\n};\n\nexport const notificationStatus = {\n    unRead: 1,\n    read: 2,\n};\n\nexport const isSent = {\n    sent: 0,\n    notSent: 1,\n};\n\nexport const registration_type = {\n    EMAIL: 1,\n    SSO: 2,\n};\n\nexport const registration_from = {\n    WEB: 1,\n    APP: 2,\n};\n\nexport const expirationTime = {\n    normal: {\n        hours: 8,\n        minutes: 2,\n        seconds: 120,\n        unit: \"h\",\n    },\n    remember: {\n        hours: 12,\n        minutes: 12 * 60 * 60,\n        seconds: 60,\n        unit: \"h\",\n    },\n};\n","#!/usr/bin/env node\n/* eslint-disable no-useless-escape */\n\n\"strict mode\";\n\nimport jwt from \"jsonwebtoken\";\nimport https from \"https\";\nimport fs from \"fs\";\n\nimport crypto from \"crypto\";\nimport { expirationTime } from \"./sec-types\";\nimport { randomNumber, OTP, app } from \"./common\";\n\nconst cryptoAlgorithm = \"aes-256-ctr\"; // Do not alter\nconst cryptoPassword = Buffer.from(process.env.CRYPTO_PASSWORD, \"base64\"); // Do not alter\nconst IV_LENGTH = 16;\n\nconst randomStringLength = randomNumber.length;\nconst chars = randomNumber.containers;\n\nconst OTPlength = OTP.length;\nconst OTPchars = OTP.containers;\n\n/**\n * Generates a random number of specified length using the specified characters\n * @returns {string} - The generated random number\n */\nexport const getRandomNumber = () => {\n    let result = \"\";\n    for (let i = randomStringLength; i > 0; --i)\n        result += chars[Math.round(Math.random() * (chars.length - 1))];\n    return result;\n};\n\n/**\n * Generates a one-time password (OTP) of specified length using the specified characters\n * @returns {string} - The generated OTP\n */\nexport const getOTP = () => {\n    let result = \"\";\n    for (let i = OTPlength; i > 0; --i)\n        result += OTPchars[Math.round(Math.random() * (OTPchars.length - 1))];\n    return result;\n};\n\n/**\n * Encrypts a password using AES-256-CTR encryption\n * @param {string} password - The password to be encrypted\n * @returns {string} - The encrypted password, prefixed by the initialization vector used in encryption\n */\nexport const hashString = (password) => {\n    const iv = crypto.randomBytes(IV_LENGTH);\n    const cipher = crypto.createCipheriv(cryptoAlgorithm, Buffer.from(cryptoPassword), iv);\n    const encrypted = cipher.update(password);\n    const finalBuffer = Buffer.concat([encrypted, cipher.final()]);\n    return `${iv.toString(\"hex\")}:${finalBuffer.toString(\"hex\")}`;\n};\n\n/**\n * Decrypts an encrypted password using AES-256-CTR encryption\n * @param {string} password - The encrypted password, prefixed by the initialization vector used in encryption\n * @returns {string} - The decrypted password\n */\nexport const descryptHashString = (password) => {\n    const textParts = password.split(\":\");\n    const iv = Buffer.from(textParts.shift(), \"hex\");\n    const encryptedText = Buffer.from(textParts.join(\":\"), \"hex\");\n    const decipher = crypto.createDecipheriv(cryptoAlgorithm, Buffer.from(cryptoPassword), iv);\n    let decrypted = decipher.update(encryptedText);\n    decrypted = Buffer.concat([decrypted, decipher.final()]);\n    return decrypted.toString();\n};\n\n/**\n * Generates a JSON web token (JWT) for the specified user ID\n * @param {string} user_id - The user ID for which the JWT is to be generated\n * @param {boolean} remember_me - Whether or not to generate a long-lived JWT for \"remember me\" functionality\n * @returns {Promise<string>} - A Promise that resolves to the generated JWT\n */\nexport const generateJWT = async (user_id, remember_me) => {\n    return await jwt.sign({ user_id }, app.jwtSecret, {\n        expiresIn: remember_me\n            ? `${expirationTime.remember.hours}${expirationTime.normal.unit}`\n            : `${expirationTime.normal.hours}${expirationTime.normal.unit}`,\n    });\n};\n\n/**\n * Decodes a JWT and returns the user ID it contains\n * @param {string} token - The JWT to be decoded\n * @returns {Promise<string>} - A Promise that resolves to the user ID contained in the JWT\n */\nexport const decodeJWT = async (token) => {\n    try {\n        const decoded = await jwt.verify(token, app.jwtSecret);\n        return decoded.user_id;\n    } catch (err) {\n        throw err;\n    }\n};\n\n/**\n * Adds the specified number of hours to a given date\n * @param {Date} date - The date to which hours are to be added\n * @param {number} hours - The number of hours to add to the date\n * @returns {Date} - The resulting date\n */\nexport const addHoursToDate = (date, hours) => {\n    return new Date(new Date(date).setHours(date.getHours() + hours));\n};\n\n/**\n * Adds the specified number of minutes to a given date\n * @param {Date} date - The date to which minutes are to be added\n * @param {number} minutes - The number of minutes to add to the date\n * @returns {Date} - The resulting date\n */\nexport const addMinutesToDate = (date, minutes) => {\n    return new Date(new Date(date).setMinutes(date.getMinutes() + minutes));\n};\n\n/**\n * Gets the filename and extension from a given path/filename string\n * @param {string} pathfilename - The path/filename string from which to extract the filename and extension\n * @returns {string[]} - An array containing the filename and extension, respectively\n */\nexport const getFilenameAndExtension = (pathfilename) => {\n    const filenameextension = pathfilename.replace(/^.*[\\\\\\/]/, \"\");\n    const filename = filenameextension.substring(0, filenameextension.lastIndexOf(\".\"));\n    const ext = filenameextension.split(\".\").pop();\n\n    return [filename, ext];\n};\n\n/**\n * Groups an array of objects by the specified key\n * @param {Object[]} arr - The array of objects to be grouped\n * @param {string} key - The key by which to group the objects\n * @returns {Object} - An object containing the groups of objects, with keys corresponding to the grouping key values\n */\nexport const groupBy = (arr, key) => {\n    const initialValue = {};\n    return arr.reduce((acc, cval) => {\n        const myAttribute = cval[key];\n        acc[myAttribute] = [...(acc[myAttribute] || []), cval];\n        return acc;\n    }, initialValue);\n};\n\n/**\n * Creates a success response object for use in AWS Lambda functions\n * @param {Object|string} body - The body of the response object; can be an object or a string\n * @param {number} statusCode - The HTTP status code of the response\n * @returns {Object} - The response object, including headers necessary for CORS and content type\n */\nexport const createSuccessResponse = (body, statusCode) => {\n    const bodyString = typeof body === \"object\" ? JSON.stringify(body) : body;\n    return {\n        statusCode,\n        body: bodyString,\n        headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Content-Type\": \"application/json \",\n        },\n    };\n};\n\n/**\n * Creates an error response object with a given message and status code\n *\n * @param {string} message - The error message\n * @param {number} statusCode - The HTTP status code\n * @returns {Object} - The error response object\n */\nexport const createErrorResponse = (body, statusCode) => {\n    const bodyString = typeof body === \"object\" ? JSON.stringify(body) : body;\n    return {\n        statusCode,\n        body: bodyString || \"Internal Server Error\",\n        headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Content-Type\": \"application/json \",\n        },\n    };\n};\n\n/**\n * Converts a readable stream to a string\n *\n * @param {stream.Readable} stream - The stream to convert\n * @returns {Promise<string>} - A promise that resolves to the stream content as a string\n */\nexport const streamToString = (stream) =>\n    new Promise((resolve, reject) => {\n        const chunks = [];\n        stream.on(\"data\", (chunk) => chunks.push(chunk));\n        stream.on(\"error\", reject);\n        stream.on(\"end\", () => resolve(Buffer.concat(chunks).toString(\"utf8\")));\n    });\n\n/**\n * Parses cookies from a given request object\n *\n * @param {Object} request - The request object\n * @returns {Object} - An object with the parsed cookies\n */\nexport const parseCookies = (request) => {\n    const list = {};\n    try {\n        const cookieHeader =\n            request.queryStringParameters && request.queryStringParameters.cookie\n                ? request.queryStringParameters.cookie.split(\";\")\n                : request.cookies\n                ? request.cookies\n                : request.headers.Cookie\n                ? request.headers.Cookie.split(\";\")\n                : request.headers.cookie\n                ? request.headers.cookie.split(\";\")\n                : request.headers.authorization\n                ? request.headers.authorization.split(\";\")\n                : request.headers.Authorization.split(\";\");\n\n        if (!cookieHeader) return list;\n\n        cookieHeader.forEach((cookie) => {\n            const [name, ...rest] = cookie.split(`=`);\n            const trimedName = name?.trim();\n            if (!trimedName) return;\n            const value = rest.join(`=`).trim();\n            if (!value) return;\n            list[trimedName] = decodeURIComponent(value);\n        });\n    } catch (err) {\n        console.log(\"Some error occured in parsing cookies\", err);\n    }\n\n    return list;\n};\n\n/**\n * Formats a date string to the format 'MM/DD/YYYY'\n *\n * @param {string} date - The date string to format\n * @returns {string} - The formatted date string\n */\nexport const formatDate = (date) => {\n    const newDate = new Date(date);\n    return `${newDate.getMonth() > 8 ? newDate.getMonth() + 1 : `0${newDate.getMonth() + 1}`}/${\n        newDate.getDate() > 9 ? newDate.getDate() : `0${newDate.getDate()}`\n    }/${newDate.getFullYear()}`;\n};\n\n/**\n * Creates a directory at the given path\n *\n * @param {string} path - The path of the directory to create\n * @returns {Promise<void>} - A promise that resolves when the directory is created\n */\nexport const createDirectory = async (path) => {\n    try {\n        if (!fs.existsSync(path)) {\n            fs.mkdirSync(path);\n        }\n    } catch (err) {\n        console.log(\"Error occured in creating directory\", err);\n    }\n};\n\n/**\n * Downloads a file from the given URL and saves it to the given file path\n *\n * @param {string} url - The URL of the file to download\n * @param {string} filePath - The path of the file to save to\n * @returns {Promise<void>} - A promise that resolves when the file is downloaded\n */\nexport const downloadFile = async (url, filePath) => {\n    return await new Promise((resolve, reject) => {\n        console.log(\"Downloading file from \", url, \"to\", filePath);\n        https\n            .get(url, (response) => {\n                const code = response.statusCode ? response.statusCode : 0;\n\n                if (code >= 400) {\n                    return reject(new Error(response.statusMessage));\n                }\n\n                // handle redirects\n                if (code > 300 && code < 400 && !!response.headers.location) {\n                    return downloadFile(response.headers.location, filePath);\n                }\n\n                // save the file to disk\n                const fileWriter = fs.createWriteStream(filePath).on(\"finish\", () => {\n                    console.log(\"Download Completed!\");\n                    resolve({});\n                });\n\n                response.pipe(fileWriter);\n                return \"File written\";\n            })\n            .on(\"error\", (error) => {\n                console.log(\"Error occured in downloading file\", error);\n                reject(error);\n            });\n    });\n};\n\n/**\n * Returns the top-level domain of a given URL without any subdomains.\n * @param {string} domain - The full domain to extract the top-level domain from.\n * @returns {string} - The top-level domain of the given domain without any subdomains.\n * @throws {Error} - Throws an error if the domain cannot be processed.\n */\nexport const getDomainWithoutSubdomain = (domain) => {\n    try {\n        const domainCharacters = domain.split(\"\").reverse();\n        let domainReversed = \"\";\n        let dotCount = 0;\n\n        do {\n            if (domainCharacters[0] === \".\") {\n                dotCount++;\n                if (dotCount === 2) break;\n            }\n            domainReversed += domainCharacters[0];\n            domainCharacters.splice(0, 1);\n        } while (dotCount < 2 && domainCharacters.length > 0);\n\n        return domainReversed.split(\"\").reverse().join(\"\");\n    } catch (err) {\n        console.log(\"Error occured while getting domain without sub domain\", err);\n        throw err;\n    }\n};\n\n/**\n * Returns the size of a file in bytes given the file's path.\n * @param {string} filename - The path to the file to get the size of.\n * @returns {number} - The size of the file in bytes.\n */\nexport const getFilesizeInBytes = (filename) => {\n    const stats = fs.statSync(filename);\n    return stats.size;\n};\n\n/**\n * Returns the start and end dates of a specified period based on a given date.\n * @param {string} periodType - The type of period to get (\"day\", \"month\", \"months\", or \"year\").\n * @param {string[]} date - The date to calculate the period start and end from.\n * @param {number} value - The number of months to subtract when the periodType is \"months\".\n * @returns {Date[]} - An array containing the start and end dates of the specified period.\n * @throws {Error} - Throws an error if the periodType is not one of the specified types.\n */\nexport const getPeriodStartEnd = (periodType, date, value) => {\n    if (periodType === \"date_range\") return [new Date(date[0]), new Date(date[1])];\n\n    const startDate = new Date(date[0]);\n    const endDate = new Date(date[0]);\n\n    if (periodType === \"day\") {\n        startDate.setHours(0, 0, 0, 0);\n        endDate.setHours(23, 59, 59, 999);\n    } else if (periodType === \"month\") {\n        startDate.setDate(1);\n        endDate.setMonth(endDate.getMonth() + 1);\n        endDate.setDate(0);\n        endDate.setHours(23, 59, 59, 999);\n    } else if (periodType === \"months\") {\n        startDate.setMonth(startDate.getMonth() - value);\n        startDate.setDate(0);\n        endDate.setMonth(endDate.getMonth() + 1);\n        endDate.setDate(0);\n        endDate.setHours(23, 59, 59, 999);\n    } else if (periodType === \"year\") {\n        startDate.setFullYear(startDate.getFullYear() - 1);\n        startDate.setMonth(startDate.getMonth());\n        endDate.setMonth(startDate.getMonth());\n        endDate.setHours(23, 59, 59, 999);\n    } else {\n        throw new Error(stringifyError({ message: \"Invalid period type\", code: 400 }));\n    }\n\n    return [startDate, endDate];\n};\n\nexport const parseEventBody = (parseBody) => {\n    if (parseBody) {\n        return JSON.parse(parseBody);\n    }\n    return parseBody;\n};\n\nexport const stringifyError = (errObj) => {\n    try {\n        return JSON.stringify(errObj);\n    } catch (err) {\n        return errObj;\n    }\n};\n\nexport const parseError = (errObj) => {\n    try {\n        return JSON.parse(errObj);\n    } catch (err) {\n        return errObj;\n    }\n};\n\nexport const generateError = (message, code) => {\n    throw new Error(stringifyError({ message, code }));\n};\n","/* eslint-disable prettier/prettier */\nimport { initConnection } from \".\";\n\nasync function queryDatabase(query, params) {\n    const conn = await initConnection();\n    try {\n        if (params) {\n            const rows = await conn.query(query, params);\n            return rows;\n        }\n        const rows = await conn.query(query);\n        return rows;\n    } catch (err) {\n        console.error(err);\n        throw err;\n    } finally {\n        if (conn) conn.end();\n    }\n}\n\nexport async function createRecord(table, records, getResults, column) {\n    const columns = Object.keys(records[0]).toString();\n    const values = records.map((record) => Object.values(record));\n    const query = `INSERT INTO ${table} (${columns}) VALUES ?`;\n    const insertResult = await queryDatabase(query, [values]);\n    const { insertId } = insertResult;\n\n    if (getResults) {\n        const selectQuery = `SELECT * FROM ${table} WHERE ${column} = ?`;\n        const selectResult = await queryDatabase(selectQuery, [insertId]);\n        return selectResult[0];\n    }\n    return insertId;\n}\n\nexport async function updateRecord(table, record, whereColumns, joinParams) {\n    const columns = Object.keys(record)\n        .map((ele) => `${ele} = ?`)\n        .toString();\n    const whereClause = Object.keys(whereColumns)\n        .map((key) => `${key} = ?`)\n        .join(` ${joinParams} `);\n    const params = [...Object.values(record), ...Object.values(whereColumns)];\n    const query = `UPDATE ${table} SET ${columns} WHERE ${whereClause}`;\n    return await queryDatabase(query, params);\n}\n\nexport async function getAllRecords(table) {\n    const query = `SELECT * FROM ${table}`;\n    return await queryDatabase(query);\n}\n\nexport async function getRecordByParams(\n    table,\n    whereColumns,\n    joinParams,\n    selectParams = \"*\",\n    order = \"desc\",\n    orderBy = \"suid\",\n) {\n    const whereClause = Object.keys(whereColumns)\n        .map((key) => `${key} = ?`)\n        .join(` ${joinParams} `);\n    const query = `SELECT ${selectParams} FROM ${table} WHERE ${whereClause} order by ${orderBy} ${order}`;\n    return await queryDatabase(query, [...Object.values(whereColumns)]);\n}\n\nexport async function deleteRecord(table, whereColumns) {\n    const whereClause = Object.keys(whereColumns)\n        .map((key) => `${key} = ?`)\n        .join(\" AND \");\n    const query = `DELETE FROM ${table} WHERE ${whereClause}`;\n    return await queryDatabase(query, [...Object.values(whereColumns)]);\n}\n\n// export async function runRawQuery(table, alias1, alias2) {\n//     const joinCondition = `${alias1.column1} = ${alias2.column2}`;\n//    const query = `SELECT * FROM ${table}${alias1} JOIN ${table}${alias2} ON ${joinCondition} `;\nexport async function runRawQuery(table1, table2, table3, column1, column2, column3, column4) {\n    const query = `SELECT * FROM ${table1} JOIN ${table2} ON ${table1}.${column1} = ${table2}.${column2} JOIN ${table3} ON  ${table2}.${column3} =  ${table3}.${column4} `;\n    return await queryDatabase(query);\n}\n\nexport async function completeDoctorsDetails(table) {\n    const query = `SELECT * FROM ${table}`;\n    return await queryDatabase(query);\n}\n\nexport async function completeDoctorsDetailsId(table, column, id) {\n    // const query = `SELECT * FROM ${table} WHERE  ${table}.doctor_details_id = ?;`;\n    const query = ` SELECT *\n    FROM sec_users\n    JOIN sec_doctors_details ON sec_users.suid = sec_doctors_details.doctor_id\n    JOIN sec_departments ON sec_doctors_details.speciality_id = sec_departments.department_id\n    WHERE sec_users.role_id = '3' AND sec_doctors_details.doctor_details_id = ?; `;\n    return await queryDatabase(query, [id]);\n}\n\nexport async function appointmentQuery(table) {\n    const query = `SELECT * FROM ${table}`;\n    return await queryDatabase(query);\n}\n\n\n\nexport async function completeappointmentQuery(table) {\n    const query = `SELECT * FROM ${table}`;\n    return await queryDatabase(query);\n}\n\n\n\n\n\n// -----------------------------------------  Doctor API -------------------------------------------------------\n\nexport async function DocDashboardAppQuery(table, doc_id) {\n    const query = `SELECT * FROM ${table} WHERE ${table}.doctor_id = ${doc_id}`;\n    return await queryDatabase(query);\n}\n\n\nexport async function DocDashoardAppstatusQuery(table, app_status, app_id) { \n    const query = `SELECT * FROM ${table} WHERE ${table}.status = '${app_status}' AND ${table}.doctor_id = ${app_id}`;\n    return await queryDatabase(query);\n}\n\nexport async function DocNotificationQuery(table, app_id) { \n    const query = `SELECT * FROM ${table} WHERE ${table}.doctor_id = ${app_id}`;\n    return await queryDatabase(query);\n}\n\n\nexport async function docAppointmentdetailsQuerybyId(table, app_id) {\n    const query = `SELECT * FROM ${table} WHERE ${table}.doctor_id = ${app_id}`;\n    return await queryDatabase(query);\n}\n\nexport async function docAppointmentQuerybystatusId(table, app_status, app_id) { \n    const query = `SELECT * FROM ${table} WHERE ${table}.status = '${app_status}' AND ${table}.doctor_id = ${app_id}`;\n    return await queryDatabase(query);\n}\n\n\nexport async function getDocAppStatusRecord(\n    table,\n    whereColumns,\n    joinParams,\n    selectParams = \"*\",\n    order = \"desc\",\n    orderBy = \"appointment_id\",\n) {\n    const whereClause = Object.keys(whereColumns)\n        .map((key) => `${key} = ?`)\n        .join(` ${joinParams} `);\n    const query = `SELECT ${selectParams} FROM ${table} WHERE ${whereClause} order by ${orderBy} ${order}`;\n    return await queryDatabase(query, [...Object.values(whereColumns)]);\n}\n\nexport async function getDocListingRecord(\n    table,\n    whereColumns,\n    joinParams,\n    selectParams = \"*\",\n    order = \"desc\",\n    orderBy = \"doctor_id\",\n) {\n    const whereClause = Object.keys(whereColumns)\n        .map((key) => `${key} = ?`)\n        .join(` ${joinParams} `);\n    const query = `SELECT ${selectParams} FROM ${table} WHERE ${whereClause} order by ${orderBy} ${order}`;\n    return await queryDatabase(query, [...Object.values(whereColumns)]);\n}\n\n\n\nexport async function getDocAppRecord(\n    table,\n    whereColumns,\n    joinParams,\n    selectParams = \"*\",\n    order = \"desc\",\n    orderBy = \"doctor_id\",\n) {\n    const whereClause = Object.keys(whereColumns)\n        .map((key) => `${key} = ?`)\n        .join(` ${joinParams} `);\n    const query = `SELECT ${selectParams} FROM ${table} WHERE ${whereClause} order by ${orderBy} ${order}`;\n    return await queryDatabase(query, [...Object.values(whereColumns)]);\n}\n\nexport async function doctordetailsQueryId(table1, table2, table3, column1, column2, column3, column4, column5, id) {\n    // const query = `SELECT * FROM  ${table2} WHERE   ${table2}.doctor_id =  ${id} ;`;\n    const query = ` SELECT *  FROM ${table1} JOIN ${table2} ON ${table1}.${column1} = ${table2}.${column2} JOIN ${table3} ON  ${table2}.${column3} =  ${table3}.${column4}\n    WHERE ${table1}.role_id = '3' AND ${table2}.doctor_id = ${id} `;\n  \n    return await queryDatabase(query, [id]);\n}\n\n\nexport async function getDocDetailRecord(\n    table,\n    whereColumns,\n    joinParams,\n    selectParams = \"*\",\n    order = \"desc\",\n    orderBy = \"doctor_id\",\n) {\n    const whereClause = Object.keys(whereColumns)\n        .map((key) => `${key} = ?`)\n        .join(` ${joinParams} `);\n    const query = `SELECT ${selectParams} FROM ${table} WHERE ${whereClause} order by ${orderBy} ${order}`;\n    return await queryDatabase(query, [...Object.values(whereColumns)]);\n}\n\n\n\n// export async function getDocListingRecord(\n//     table,\n//     whereColumns,\n//     joinParams,\n//     selectParams = \"*\",\n//     order = \"desc\",\n//     orderBy = \"doctor_id\",\n// ) {\n//     const whereClause = Object.keys(whereColumns)\n//         .map((key) => `${key} = ?`)\n//         .join(` ${joinParams} `);\n//     const query = `SELECT ${selectParams} FROM ${table} WHERE ${whereClause} order by ${orderBy} ${order}`;\n//     return await queryDatabase(query, [...Object.values(whereColumns)]);\n// }\n\n\nexport async function DocAppointmentHistory(table, app_id) {\n    // const query = `SELECT * FROM ${table} WHERE ${table}.status = ${app_status}`;\n    const query = `SELECT * FROM ${table} WHERE ${table}.doctor_id = ${app_id}`;\n    return await queryDatabase(query);\n}\n\n\nexport async function DoctransactionQuery(table, doc_id) {\n    // const query = `SELECT * FROM ${table} WHERE ${table}.status = ${app_status}`;\n    const query = `SELECT * FROM ${table} WHERE ${table}.user_id = ${doc_id}`;\n    return await queryDatabase(query);\n}\n// export async function getDocListingRecord(\n//     table,\n//     whereColumns,\n//     joinParams,\n//     selectParams = \"*\",\n//     order = \"desc\",\n//     orderBy = \"doctor_id\",\n// ) {\n//     const whereClause = Object.keys(whereColumns)\n//         .map((key) => `${key} = ?`)\n//         .join(` ${joinParams} `);\n//     const query = `SELECT ${selectParams} FROM ${table} WHERE ${whereClause} order by ${orderBy} ${order}`;\n//     return await queryDatabase(query, [...Object.values(whereColumns)]);\n// }\n\n\n// -----------------------------------------------------------Patient -------------------------------------------\n// Patient Dashboard All Doctors details\nexport async function dashboarddocdetailsQuery(table1, table2, table3, column1, column2, column3, column4) {\n    const query = `SELECT * FROM ${table1} JOIN ${table2} ON ${table1}.${column1} = ${table2}.${column2} JOIN ${table3} ON  ${table2}.${column3} =  ${table3}.${column4} \n    WHERE ${table1}.role_id = '3'`;\n    return await queryDatabase(query);\n}\n\n// Patient Dashboard Single Doctors details \nexport async function dashboarddocdetailsQueryId(table1, table2, table3, column1, column2, column3, column4, doc_id) {\n    const query = `SELECT * FROM ${table1} JOIN ${table2} ON ${table1}.${column1} = ${table2}.${column2} JOIN ${table3} ON  ${table2}.${column3} =  ${table3}.${column4} \n    WHERE ${table1}.role_id = '3' AND ${table2}.doctor_id = ${doc_id} `;\n    return await queryDatabase(query);\n}\n\n// Patient Dashboard All HCF details\nexport async function dashboardhcfdetailsQuery(table1, table2, column1, column2) {\n    const query = `SELECT * FROM ${table1} JOIN ${table2} ON ${table1}.${column1} = ${table2}.${column2}  \n    WHERE ${table1}.role_id = '4'`;\n    return await queryDatabase(query);\n}\n\n// Patient Dashboard Single HCF details \nexport async function dashboardhcfdetailsQueryId(table1, table2, column1, column2, hcf_id) {\n    const query = `SELECT * FROM ${table1} JOIN ${table2} ON ${table1}.${column1} = ${table2}.${column2}  \n    WHERE ${table1}.role_id = '4' AND ${table2}.hcf_id = ${hcf_id} `;\n    return await queryDatabase(query);\n}\n\n\nexport async function patientActivityQuery(table, app_id) {\n    // const query = `SELECT * FROM ${table} WHERE ${table}.status = ${app_status}`;\n    const query = `SELECT * FROM ${table} WHERE ${table}.patient_id = ${app_id}`;\n    return await queryDatabase(query);\n}\n\n\n\nexport async function patientNotificationQuery(table, app_id) {\n    // const query = `SELECT * FROM ${table} WHERE ${table}.status = ${app_status}`;\n    const query = `SELECT * FROM ${table} WHERE ${table}.patient_id = ${app_id}`;\n    return await queryDatabase(query);\n}\n\nexport async function patientappQuerybystatusid(table, app_status, app_id) {\n    // const query = `SELECT * FROM ${table} WHERE ${table}.status = ${app_status}`;\n    const query = `SELECT * FROM ${table} WHERE ${table}.status = '${app_status}' AND ${table}.patient_id = ${app_id}`;\n    return await queryDatabase(query);\n}\n\nexport async function appointmentHistoryQuery(table, app_id) {\n    // const query = `SELECT * FROM ${table} WHERE ${table}.status = ${app_status}`;\n    const query = `SELECT * FROM ${table} WHERE ${table}.patient_id = ${app_id}`;\n    return await queryDatabase(query);\n}\n\nexport async function patienttransactionQuery(table, user_id) {\n    // const query = `SELECT * FROM ${table} WHERE ${table}.status = ${app_status}`;\n    const query = `SELECT * FROM ${table} WHERE ${table}.user_id = ${user_id}`;\n    return await queryDatabase(query);\n}\nexport async function patientPlanQuery(table, pat_id) {\n    // const query = `SELECT * FROM ${table} WHERE ${table}.status = ${app_status}`;\n    const query = `SELECT * FROM ${table} WHERE ${table}.patient_id = ${pat_id}`;\n    return await queryDatabase(query);\n}\n","import mysql from \"serverless-mysql\";\n\nlet pool;\n\nexport const initConnection = async () => {\n    try {\n        if (!pool) {\n            console.log(\"connecting to database............\");\n            pool = mysql({\n                config: {\n                    host: process.env.DB_HOST,\n                    user: process.env.DB_USER,\n                    password: process.env.DB_PASSWORD,\n                    database: process.env.DB_DATABASE,\n                    waitForConnections: true,\n                    connectionLimit: process.env.CONNECTION_LIMIT, // maximum number of connections in the pool\n                    queueLimit: process.env.QUEUE_LIMIT, // maximum number of requests in the queue\n                },\n            });\n            console.log(\"connected to database\");\n            return pool;\n        }\n\n        console.log(\"using cached connection............\");\n        return pool;\n    } catch (err) {\n        console.log(\"Error occurred in database connection\", err);\n        throw err;\n    }\n};\n","export const tableNames = {\n    SEC_COUNTRIES: \"sec_countries\",\n    SEC_STATES: \"sec_states\",\n    SEC_CITIES: \"sec_cities\",\n    SEC_ROLES: \"sec_roles\",\n    SEC_DEPARTMENTS: \"sec_departments\",\n    SEC_USERS: \"sec_users\",\n    SEC_USER_CODES: \"sec_user_codes\",\n    SEC_PATIENT_PLANS: \"sec_patient_plans\",\n    SEC_DOCTORS_DETAILS: \"sec_doctors_details\",\n    VW_SEC_COMPLETE_DOCTOR_DETAILS: \"completedoctordetails\",\n    SEC_APPOINTMENTS: \"sec_appointments\",\n    SEC_TRANSACTIONS: \"sec_transactions\",\n    SEC_DOCTOR_LISTING: \"sec_doc_listing_details\",\n    SEC_HCF_DETAILS:\"sec_hcf_details\",\n\n};\n","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"serverless-mysql\");","module.exports = require(\"crypto\");","module.exports = require(\"fs\");","module.exports = require(\"https\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { createSuccessResponse, createErrorResponse } from \"../configs/utility\";\nimport { tableNames } from \"../database/tables\";\nimport { getAllRecords, getRecordByParams } from \"../database/helper\";\nimport { getCountryCodesList } from \"./helpers\";\n\nexport const getCountryCodes = async (event, context, callback) => {\n    try {\n        const countryCodes = getCountryCodesList();\n        return createSuccessResponse({ response: countryCodes }, 200);\n    } catch (err) {\n        console.log(\"Error in getCountryCodes handler\", err, err.statusCode);\n        return createErrorResponse({ error: err.message }, 500);\n    }\n};\n\nexport const getCountries = async (event, context, callback) => {\n    try {\n        const countries = await getAllRecords(tableNames.SEC_COUNTRIES);\n        return createSuccessResponse({ response: countries }, 200);\n    } catch (err) {\n        console.log(\"Error in getCountries handler\", err, err.statusCode);\n        return createErrorResponse({ error: err.message }, 500);\n    }\n};\n\nexport const getStates = async (event, context, callback) => {\n    try {\n        if (event.queryStringParameters) {\n            const { country_id } = event.queryStringParameters;\n\n            if (!country_id) {\n                return createErrorResponse({ error: \"Missing country_id query parameters\" }, 400);\n            }\n            const params = {\n                country_id,\n            };\n            const states = await getRecordByParams(\n                tableNames.SEC_STATES,\n                params,\n                \"OR\",\n                \"*\",\n                \"asc\",\n                \"state_id\",\n            );\n            return createSuccessResponse({ response: states }, 200);\n        }\n        return createErrorResponse({ error: \"Missing required query parameters\" }, 400);\n    } catch (err) {\n        console.log(\"Error in getStates handler\", err, err.statusCode);\n        return createErrorResponse({ error: err.message }, 500);\n    }\n};\n\nexport const getCities = async (event, context, callback) => {\n    try {\n        if (event.queryStringParameters) {\n            const { state_id } = event.queryStringParameters;\n\n            if (!state_id) {\n                return createErrorResponse({ error: \"Missing state_id query parameters\" }, 400);\n            }\n            const params = {\n                state_id,\n            };\n            const states = await getRecordByParams(\n                tableNames.SEC_CITIES,\n                params,\n                \"OR\",\n                \"*\",\n                \"asc\",\n                \"city_id\",\n            );\n            return createSuccessResponse({ response: states }, 200);\n        }\n        return createErrorResponse({ error: \"Missing required query parameters\" }, 400);\n    } catch (err) {\n        console.log(\"Error in handler\", err, err.statusCode);\n        return createErrorResponse({ error: err.message }, 500);\n    }\n};\n\nexport const getRoles = async (event, context, callback) => {\n    try {\n        const countries = await getAllRecords(tableNames.SEC_ROLES);\n        return createSuccessResponse({ response: countries }, 200);\n    } catch (err) {\n        console.log(\"Error in getCountries handler\", err, err.statusCode);\n        return createErrorResponse({ error: err.message }, 500);\n    }\n};\n\nexport const getDepartments = async (event, context, callback) => {\n    try {\n        const countries = await getAllRecords(tableNames.SEC_DEPARTMENTS);\n        return createSuccessResponse({ response: countries }, 200);\n    } catch (err) {\n        console.log(\"Error in getCountries handler\", err, err.statusCode);\n        return createErrorResponse({ error: err.message }, 500);\n    }\n};\n"],"names":["defaultCountriesData","_formatCountriesData","countriesData","countryCodeList","forEach","country","name","iso2","dialCode","priority","areaCodes","getCountryCodesList","randomNumber","length","containers","minutes","OTP","thumbnail","width","height","imgFormat","SMSmessages","activation_code_message","aws","s3","params","Bucket","Domain","settings","root_path","feedback_path","image_path","file_path","app","jwtSecret","process","env","JWT_SECRET","envMapping","development","production","test","totalFilesSize","result","SUCCESS","EMAIL_EXISTS","MOBILE_EXISTS","USER_NOT_EXISTS","USER_EXISTS","USER_PASSWORD_INCORRECT","REGISTRATION_NOT_CONFIRMED","ACTIVATION_CODE_EXPIRED","ACTIVATION_CODE_MISMATCH","ALREADY_ACTIVE_MEMBER","VALUE_NULL","DOCUMENT_N0T_EXISTS","FIREBASE_NOTIFICATION_ERROR","ZERO_RESULTS","OVER_QUERY_LIMIT","REQUEST_DENIED","INVALID_REQUEST","UNKNOWN_ERROR","OK","BAD","DENIED","FORBIDDEN","SERVER_ERROR","notificationType","BROADCAST","UNICAST","userRole","SUPER_ADMIN","ADMIN","DOCTOR","HCF","PATIENT","userStatus","ACTIVE","IN_ACTIVE","DELETED","TRUNK","isPublished","PUBLISHED","UNPUBLISHED","isCompleted","COMPLETED","NOT_COMPLETED","mailType","welcome","resetPassword","error","notificationStatus","unRead","read","isSent","sent","notSent","registration_type","EMAIL","SSO","registration_from","WEB","APP","expirationTime","normal","hours","seconds","unit","remember","jwt","https","fs","crypto","cryptoAlgorithm","cryptoPassword","Buffer","from","CRYPTO_PASSWORD","IV_LENGTH","randomStringLength","chars","OTPlength","OTPchars","getRandomNumber","i","Math","round","random","getOTP","hashString","password","iv","randomBytes","cipher","createCipheriv","encrypted","update","finalBuffer","concat","final","toString","descryptHashString","textParts","split","shift","encryptedText","join","decipher","createDecipheriv","decrypted","generateJWT","user_id","remember_me","sign","expiresIn","decodeJWT","token","decoded","verify","err","addHoursToDate","date","Date","setHours","getHours","addMinutesToDate","setMinutes","getMinutes","getFilenameAndExtension","pathfilename","filenameextension","replace","filename","substring","lastIndexOf","ext","pop","groupBy","arr","key","initialValue","reduce","acc","cval","myAttribute","createSuccessResponse","body","statusCode","bodyString","JSON","stringify","headers","createErrorResponse","streamToString","stream","Promise","resolve","reject","chunks","on","chunk","push","parseCookies","request","list","cookieHeader","queryStringParameters","cookie","cookies","Cookie","authorization","Authorization","rest","trimedName","trim","value","decodeURIComponent","console","log","formatDate","newDate","getMonth","getDate","getFullYear","createDirectory","path","existsSync","mkdirSync","downloadFile","url","filePath","get","response","code","Error","statusMessage","location","fileWriter","createWriteStream","pipe","getDomainWithoutSubdomain","domain","domainCharacters","reverse","domainReversed","dotCount","splice","getFilesizeInBytes","stats","statSync","size","getPeriodStartEnd","periodType","startDate","endDate","setDate","setMonth","setFullYear","stringifyError","message","parseEventBody","parseBody","parse","errObj","parseError","generateError","initConnection","queryDatabase","query","conn","rows","end","createRecord","table","records","getResults","column","columns","Object","keys","values","map","record","insertResult","insertId","selectQuery","selectResult","updateRecord","whereColumns","joinParams","ele","whereClause","getAllRecords","getRecordByParams","selectParams","order","orderBy","deleteRecord","runRawQuery","table1","table2","table3","column1","column2","column3","column4","completeDoctorsDetails","completeDoctorsDetailsId","id","appointmentQuery","completeappointmentQuery","DocDashboardAppQuery","doc_id","DocDashoardAppstatusQuery","app_status","app_id","DocNotificationQuery","docAppointmentdetailsQuerybyId","docAppointmentQuerybystatusId","getDocAppStatusRecord","getDocListingRecord","getDocAppRecord","doctordetailsQueryId","column5","getDocDetailRecord","DocAppointmentHistory","DoctransactionQuery","dashboarddocdetailsQuery","dashboarddocdetailsQueryId","dashboardhcfdetailsQuery","dashboardhcfdetailsQueryId","hcf_id","patientActivityQuery","patientNotificationQuery","patientappQuerybystatusid","appointmentHistoryQuery","patienttransactionQuery","patientPlanQuery","pat_id","mysql","pool","config","host","DB_HOST","user","DB_USER","DB_PASSWORD","database","DB_DATABASE","waitForConnections","connectionLimit","CONNECTION_LIMIT","queueLimit","QUEUE_LIMIT","tableNames","SEC_COUNTRIES","SEC_STATES","SEC_CITIES","SEC_ROLES","SEC_DEPARTMENTS","SEC_USERS","SEC_USER_CODES","SEC_PATIENT_PLANS","SEC_DOCTORS_DETAILS","VW_SEC_COMPLETE_DOCTOR_DETAILS","SEC_APPOINTMENTS","SEC_TRANSACTIONS","SEC_DOCTOR_LISTING","SEC_HCF_DETAILS","getCountryCodes","event","context","callback","countryCodes","getCountries","countries","getStates","country_id","states","getCities","state_id","getRoles","getDepartments"],"sourceRoot":""}